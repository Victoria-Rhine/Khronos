@using BeyondTheTutor.Models
@model LoginViewModel
    <body class="wou-grey-bg">
        @if (ViewBag.error != null)
        {
            <script type="text/javascript">
        window.onload = function () {
            alert("@ViewBag.error");
        };
            </script>
        }

        @if (ViewBag.msg != null)
        {
            <div class="ui green message" style="text-align: center;">
                <B>@ViewBag.msg</B>
            </div>
        }

        <div class="one column row">
            <div class="ui column center aligned stackable grid">
                <div class="ten wide column segment">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal massive", role = "form" }))
                    {
                        <div class="ui placeholder segment login">
                            <div class="ui form large">
                                <img class="ui fluid large centered image" src="../Content/images/resize_welcome_banner.png" alt="Alternate Text">

                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="two fields">
                                    <div class="field">
                                        <label>Username</label>
                                        <div class="ui left icon input">
                                            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email" })
                                            <i class="user icon"></i>
                                        </div>
                                        <div class="inline field" style="font-size: large; color: #db0a29;">
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="field">
                                        <label>Password</label>
                                        <div class="ui left icon input">
                                            @Html.PasswordFor(m => m.Password, new { placeholder = "Password" })
                                            <i class="lock icon"></i>
                                        </div>
                                        <div class="inline field " style="font-size: large; color: #db0a29;">
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                        <div>
                                            @Html.ActionLink("Forgot Password?", "ForgotPassword")
                                        </div>
                                    </div>

                                </div>
                                <div class="inline field">
                                    <div class="ui checkbox massive">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        <label>Remember Me</label>
                                    </div>
                                </div>
                                <button class="fluid ui button schedule" style="font-size: large;">Enter Site</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="ui container footer">
            <hr />
            <div class="ui vertical footer segment">
                <div class="ui container">
                    <div class="ui stackable divided equal height stackable grid">
                        @if (Request.IsAuthenticated)
                        {

                        }
                        else
                        {
                            <div class="three wide column">
                                <h4 class="ui header">Resources</h4>
                                <div class="ui link list">
                                    @Html.ActionLink("FAQ", "FAQ", "Home", new { area = "" }, htmlAttributes: new { @class = (ViewBag.Current == "HomeFAQ" ? "item red active" : "item") })
                                    @Html.ActionLink("Privacy Policy", "Privacy", "Home", new { area = "" }, htmlAttributes: new { @class = (ViewBag.Current == "HomePrivacy" ? "item red active" : "item") })
                                    <a class=@(ViewBag.Current == "HomePrivacy" ? "item red active" : "item") href="#">Contact Us</a>
                                </div>
                            </div>
                            <div class="three wide column">
                                <h4 class="ui header">Account Services</h4>
                                <div class="ui link list">
                                    @Html.ActionLink("Login", "Login", "Account", new { area = "" }, htmlAttributes: new { @class = (ViewBag.Current == "AccountLogin" ? "item red active" : "item") })
                                    @Html.ActionLink("Register", "Register", "Account", new { area = "" }, htmlAttributes: new { @class = (ViewBag.Current == "AccountRegister" ? "item red active" : "item") })
                                </div>
                            </div>
                        }
                        <div class="seven wide column">
                            <h4 class="ui header">Beyond the Tutor</h4>
                            <p>If you have any questions about the services offered by Beyond the Tutor, you can reach us <a href="#">here</a>.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
