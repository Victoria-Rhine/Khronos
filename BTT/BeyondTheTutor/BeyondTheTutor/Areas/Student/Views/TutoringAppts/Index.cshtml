@model IEnumerable<BeyondTheTutor.Models.TutoringAppt>
@using BeyondTheTutor.DAL;

@{
    BeyondTheTutorContext db = new BeyondTheTutorContext();
}

<body class="wou-silver-bg">
    <div class="ui one column centered padded grid">
        <div class="ui centered vertical segment">

            <div class="ui top attached tabular large menu" style="justify-content:center;">
                <a class="active item red" data-tab="BacklogButton"><b>Student Backlog</b></a>
                <a class="item red" data-tab="RequestedButton"><b>Requested</b> </a>
                <a class="item red" data-tab="ApprovedButton"><b>Approved</b> </a>
                <a class="item red" data-tab="DeclinedButton"><b>Declined</b></a>
                <a class="item red" data-tab="CompletedButton"><b>Completed</b></a>
                <a class="item red" data-tab="CanceledButton"><b>Canceled</b></a>
                <a class="item red" data-tab="NoShowButton"><b>No Shows</b></a>
                <a class="item red" data-tab="AllButton"><b>All Requests</b></a>
            </div>

            <div class="ui bottom attached active tab segment" data-tab="BacklogButton">
                @if (ViewBag.AnyRequested == false && ViewBag.AnyApproved == false)
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>

                }
                else
                {
                    if (ViewBag.AnyRequested == true)
                    {
                        <div class="ui red centered segment">
                            <div class="ui horizontal divider">
                                <h3 class="ui centered header">Requests Awaiting Approval</h3>
                            </div>
                            <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                                <thead>
                                    <tr>
                                        <th><h4>Class Requested For</h4></th>
                                        <th><h4>Date</h4></th>
                                        <th><h4>Start Time</h4></th>
                                        <th><h4>End Time</h4></th>
                                        <th><h4>Session Length</h4></th>
                                        <th><h4>Current Status</h4></th>
                                        <th colspan="2"><h4>Action</h4></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        if (item.Status == "Requested")
                                        {
                                            var dateItem = item.StartTime.ToShortDateString();
                                            var startTimeItem = item.StartTime.ToShortTimeString();
                                            var endTimeItem = item.EndTime.ToShortTimeString();
                                            bool valid2 = false;
                                            var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                            if (valid)
                                            {
                                                if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var numberOfQuestions = survey.Questions.Count();
                                                    var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                    valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                                }
                                            }

                                            <tr style="text-align: center;">
                                                <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                                <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                                <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                                <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                                <td>

                                                    @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                    {
                                                        <button class="ui disabled fluid button">
                                                            <i class="icon trash"></i>
                                                            Cancel
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="ui fluid  button">
                                                            <i class="icon trash"></i>
                                                            @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                        </button>
                                                    }
                                                </td>
                                                <td>
                                                    @if (valid && valid2)
                                                    {
                                                        var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                        var sid = survey.ID;
                                                        var questions = survey.Questions;
                                                        int startingQuestion = 0;
                                                        foreach (var q in questions)
                                                        {
                                                            var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                            if (answerList.Count() < 1)
                                                            {
                                                                startingQuestion = q.ID;
                                                            }
                                                        }
                                                        <button class="positive ui fluid basic button">
                                                            <i class="icon newspaper"></i>
                                                            @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="positive ui disabled fluid basic button">
                                                            <i class="icon newspaper"></i>
                                                            Take Survey
                                                        </button>
                                                    }

                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }

                    if (ViewBag.AnyApproved == true)
                    {
                        <div class="ui red centered segment">
                            <div class="ui horizontal divider">
                                <h3 class="ui centered header">Approved Requests</h3>
                            </div>
                            <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                                <thead>
                                    <tr>
                                        <th><h4>Class Requested For</h4></th>
                                        <th><h4>Date</h4></th>
                                        <th><h4>Start Time</h4></th>
                                        <th><h4>End Time</h4></th>
                                        <th><h4>Session Length</h4></th>
                                        <th><h4>Current Status</h4></th>
                                        <th colspan="2"><h4>Action</h4></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        if (item.Status == "Approved")
                                        {
                                            var dateItem = item.StartTime.ToShortDateString();
                                            var startTimeItem = item.StartTime.ToShortTimeString();
                                            var endTimeItem = item.EndTime.ToShortTimeString();
                                            bool valid2 = false;
                                            var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                            if (valid)
                                            {
                                                if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var numberOfQuestions = survey.Questions.Count();
                                                    var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                    valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                                }
                                            }

                                            <tr style="text-align: center;">
                                                <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                                <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                                <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                                <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                                <td>

                                                    @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                    {
                                                        <button class="ui disabled fluid button">
                                                            <i class="icon trash"></i>
                                                            Cancel
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="ui fluid  button">
                                                            <i class="icon trash"></i>
                                                            @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                        </button>
                                                    }
                                                </td>
                                                <td>
                                                    @if (valid && valid2)
                                                    {
                                                        var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                        var sid = survey.ID;
                                                        var questions = survey.Questions;
                                                        int startingQuestion = 0;
                                                        foreach (var q in questions)
                                                        {
                                                            var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                            if (answerList.Count() < 1)
                                                            {
                                                                startingQuestion = q.ID;
                                                            }
                                                        }
                                                        <button class="positive ui fluid basic button">
                                                            <i class="icon newspaper"></i>
                                                            @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="positive ui disabled fluid basic button">
                                                            <i class="icon newspaper"></i>
                                                            Take Survey
                                                        </button>
                                                    }

                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }
                </div>

            <div class="ui bottom attached tab segment" data-tab="RequestedButton">
                @if (ViewBag.AnyRequested == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">Requests Awaiting Approval</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "Requested")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="ApprovedButton">
                @if (ViewBag.AnyApproved == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">Approved Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "Approved")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="DeclinedButton">
                @if (ViewBag.AnyDeclined == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">Declined Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "Declined")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="CompletedButton">
                @if (ViewBag.AnyCompleted == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">Completed Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "Completed")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="CanceledButton">
                @if (ViewBag.AnyCanceled == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">Canceled Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "Canceled")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="NoShowButton">
                @if (ViewBag.AnyNoShows == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">No Show Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.Status == "No Show")
                                    {
                                        var dateItem = item.StartTime.ToShortDateString();
                                        var startTimeItem = item.StartTime.ToShortTimeString();
                                        var endTimeItem = item.EndTime.ToShortTimeString();
                                        bool valid2 = false;
                                        var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                        if (valid)
                                        {
                                            if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                            {
                                                var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                var numberOfQuestions = survey.Questions.Count();
                                                var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                                valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                            }
                                        }

                                        <tr style="text-align: center;" id="noShow">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>

            <div class="ui bottom attached tab segment" data-tab="AllButton">
                @if (ViewBag.AnyRequests == true)
                {
                    <div class="ui red centered segment">
                        <div class="ui horizontal divider">
                            <h3 class="ui centered header">All Requests</h3>
                        </div>
                        <table class="ui compact table stu-app" style="text-align: center; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th><h4>Class Requested For</h4></th>
                                    <th><h4>Date</h4></th>
                                    <th><h4>Start Time</h4></th>
                                    <th><h4>End Time</h4></th>
                                    <th><h4>Session Length</h4></th>
                                    <th><h4>Current Status</h4></th>
                                    <th colspan="2"><h4>Action</h4></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {

                                    var dateItem = item.StartTime.ToShortDateString();
                                    var startTimeItem = item.StartTime.ToShortTimeString();
                                    var endTimeItem = item.EndTime.ToShortTimeString();
                                    bool valid2 = false;
                                    var valid = db.Surveys.Where(surv => surv.ClassID == item.ClassID).Count() > 0;
                                    if (valid)
                                    {
                                        if (db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault() != null)
                                        {
                                            var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                            var numberOfQuestions = survey.Questions.Count();
                                            var numberOfAnswers = survey.Answers.Where(m => m.UserID == ViewBag.UID).Count();
                                            valid2 = numberOfQuestions > 0 && numberOfAnswers < numberOfQuestions;
                                        }
                                    }

                                    if (item.Status == "No Show")
                                    {
                                        <tr style="text-align: center;" id="noShow">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr style="text-align: center;">
                                            <td>@Html.DisplayFor(modelItem => item.Class.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => dateItem)</td>
                                            <td>@Html.DisplayFor(modelItem => startTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => endTimeItem)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Length)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>

                                                @if (item.Status == "Canceled" || item.Status == "Completed" || item.Status == "Declined" || item.Status == "No Show")
                                                {
                                                    <button class="ui disabled fluid button">
                                                        <i class="icon trash"></i>
                                                        Cancel
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="ui fluid  button">
                                                        <i class="icon trash"></i>
                                                        @Html.ActionLink("Cancel", "Edit", new { id = item.ID })
                                                    </button>
                                                }
                                            </td>
                                            <td>
                                                @if (valid && valid2)
                                                {
                                                    var survey = db.Surveys.Where(surv => surv.ClassID == item.ClassID).FirstOrDefault();
                                                    var sid = survey.ID;
                                                    var questions = survey.Questions;
                                                    int startingQuestion = 0;
                                                    foreach (var q in questions)
                                                    {
                                                        var answerList = q.Answers.Where(m => m.UserID == ViewBag.UID).ToList();
                                                        if (answerList.Count() < 1)
                                                        {
                                                            startingQuestion = q.ID;
                                                        }
                                                    }
                                                    <button class="positive ui fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        @Html.RouteLink("Take Survey", new { controller = "Answers", action = "Create", qid = startingQuestion, sid = sid, Area = "" })
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="positive ui disabled fluid basic button">
                                                        <i class="icon newspaper"></i>
                                                        Take Survey
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }



                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="ui red centered segment">
                        <p><b>There seems to be no requests to view at this time</b></p>
                    </div>
                }
            </div>
        </div>
    </div>
</body>

@if(ViewBag.ThankYou != null)
{
    <div class="ui tiny modal">
        <div class="header" style="text-align: center;">
            @ViewBag.ThankYou
        </div>
        <div class="content actions" style="text-align: center;">
            <div class="negative ui button">Move On</div>
        </div>
    </div>
}



@section scripts
{
    <script>
        $('.ui.tiny.modal')
            .modal('show')
            ;
    </script>

    <script src="~/Scripts/main.js"></script>
}
